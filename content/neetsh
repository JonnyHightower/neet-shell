#!/bin/bash

##########################################################################
#
#    Neet: Network discovery, enumeration and security assessment tool
#    Copyright (C) 2008-2014 Jonathan Roach
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    Contact: jonnyhightower [at] funkygeek.com
#
##########################################################################

# Neet shell for easy result navigation
CONFIG=/opt/neet/etc/neet.conf
if [ -f "${HOME}/.neet/neet.conf" ]; then
	CONFIG="${HOME}/.neet/neet.conf"
fi

# Help us generate a unique index (if necessary) for the log.
# This allows us to maintain a log for each neetsh session running
# within screen.
getIndex() {
	logfile="$1"
	IDX=0
	if [ -f $logfile ]; then
		IDX=1
		testlog="${logfile}.$IDX"
		while [ -f "$testlog" ]; do
			(( IDX++ ))
			testlog="${logfile}.$IDX"
		done
	fi
	echo $IDX
}

# Default is not to use screen
SCREEN=0

# Allow us to switch screen on before running neetsh by setting
# the environment variable
if [ ! -z $USESCREEN ]; then
	SCREEN=1
fi

# Allow us to enable screen from the neet configuration file
if grep NeetshStartWithScreen=1 "$CONFIG" >/dev/null 2>&1; then
	SCREEN=1
fi

# Allow us to enable screen from the command line
if [ ! -z $1 ] && [ "$1" == "-s" ] || [ "$1" == "--screen" ]; then
	SCREEN=1
fi

# Finally allow us disable screen before running neetsh by setting
# the environment variable
if [ ! -z $NOSCREEN ]; then
	SCREEN=0
fi

# If we have screen installed, then run the neet shell in it. If not, don't.
if [ $SCREEN == 1 ] && type screen >/dev/null 2>&1; then
	# We need to work out where to put the screen log file, so do the same
	# checks the main alias script does
	if [ ! -d .neet ] || [ -f .neet/wd ]; then
		# Check where the last neet run was and whether we can cd into it.
	  LD=`cat ${HOME}/.neet/wd`
		if [ -d "$LD" ]; then
			cd "$LD"
		else
			echo "Not in a valid neet results directory. Exiting"
			exit 1
		fi
	fi

	# At this point, we are in a neet results directory (either for the current
	# neet run, or for a previous one).
	screenlog=logs/neetsh.log
	# Generate a unique logfile name. Higher index = more recent.
	index=`getIndex $screenlog`
	if [ $index -gt 0 ]; then
		screenlog="${screenlog}.$index"
  fi
	# Tell the user where to find this log. Will generally be seen only when
	# EXITING as screen (when it starts)
	echo "Starting neet shell in a screen session. Logging to $screenlog."
	echo "logfile ${PWD}/$screenlog" > "${HOME}/.neetscreenrc"
	if [ -f "${HOME}/.screenrc" ]; then
		echo "source ${HOME}/.screenrc" >> "${HOME}/.neetscreenrc"
	fi
	screen -t "Neet shell" -c ${HOME}/.neetscreenrc -L /bin/bash --init-file  "/opt/neet/neetsh/neetshellfunc"
	rm -f "${HOME}/.neetscreenrc"

else
	echo "Starting without \"screen\". Logging will be sparse."
	/bin/bash --init-file  "/opt/neet/neetsh/neetshellfunc"
fi

# Done
exit

